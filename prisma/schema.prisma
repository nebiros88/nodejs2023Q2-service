generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  login String 
  password String
  version Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  tocken Tocken?
}

model Tocken {
  refreshToken String
  user User @relation(fields: [userId], references: [id])
  userId String @unique
}

model Artist {
  id String @id @default(uuid())
  name String
  grammy Boolean
  albums Album[]
  tracks Track[]
  favorites FavoritesToArtists?
}

model Album {
  id String @id @default(uuid())
  name String
  year Int
  artistId String?
  arttist Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  tracks Track[]
  favorites FavoritesToAlbums?
}

model Track {
  id String @id @default(uuid())
  name String
  artistId String?
  albumId String?
  duration Int
  artist Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  album Album? @relation(fields: [albumId], references: [id], onDelete: SetNull)
  favorites FavoritesToTracks?
}

model FavoritesToArtists {
  artist Artist @relation(fields: [artistId], references: [id], onDelete: Cascade)
  artistId String @unique
}

model FavoritesToAlbums {
  album Album @relation(fields: [albumId], references: [id], onDelete: Cascade)
  albumId String @unique
}

model FavoritesToTracks {
  track Track @relation(fields: [trackId], references: [id], onDelete: Cascade)
  trackId String @unique
}
